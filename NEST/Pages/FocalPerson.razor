@page "/focalperson/{InstId}"
@using System.ComponentModel
@using AntDesign.TableModels
@using AntDesign.Core.Extensions
<a class="btn btn-primary" href="/instituteinfo" role="button">Go Back</a>


<h3>Focal Person Details </h3>
<a href="AddFocalPerson/@InstId" class="btn btn-primary mt-2 mb-2">Add Focal Person</a>


<div class=" table-responsive">

    <Table TItem="EntFocalPerson" DataSource="@data">

        <GenerateColumns Range="1.." Definitions=definitions />

    </Table>
</div>


@code {
    List<EntFocalPerson> focallist = new List<EntFocalPerson>();
    EntFocalPerson[] data = new EntFocalPerson[] { };
    protected EntFocalPerson? _FocalPersonModel { get; set; } = new EntFocalPerson();
    [Parameter] public string? InstId { get; set; }

    DataTable dt = new DataTable();


    protected override async Task OnInitializedAsync()
    {
        _FocalPersonModel!.Fk_InstituteId = InstId;
        SqlParameter[] sp1 =
       {
            new SqlParameter("@InstituteId",_FocalPersonModel.Fk_InstituteId),
       };

        dt = await DALCRUD.ReadDataSpecific("SP_GetFocalPersonSpecific", sp1);
         ConvertDataIntoArray();

    }
    private void ConvertDataIntoArray()
    {
        foreach (DataRow row in dt.Rows)
        {
            EntFocalPerson entfocalInfo = new EntFocalPerson
                    {
                       
                        Pk_FocalId = row["pk_FocalId"].ToString(),
                        Fk_InstituteId = row["fk_InstituteId"].ToString(),
                        Name = row["Name"].ToString(),
                        FatherName = row["FatherName"].ToString(),
                        DOB = row["DOB"].ToString(),
                        Email = row["Email"].ToString(),
                        PhoneNo = row["PhoneNo"].ToString(),
                        CNIC = row["CNIC"].ToString(),
                        Address = row["Address"].ToString(),
                        From = row["From"].ToString(),
                        To = row["to"].ToString(),


                        // Map other properties here if needed
                    };

            focallist.Add(entfocalInfo);
        }
        data = focallist.ToArray();
    }
    void definitions(string propertyName, object column)
    {
        if (propertyName == "Tags")
        {
            var tagCol = ((Column<string[]>)column);

            tagCol.CellRender = cellData =>
    @<span>
        @foreach (var tag in cellData.FieldValue)
        {
            var color = tag.Length > 5 ? "geekblue" : "green";
            if (tag == "loser")
            {
                color = "volcano";
            }
            <Tag Color="@color">@tag</Tag>
        }
    </span>
    ;

            return;
        }

        // You can use the `SetValue` extension method to set parameters for columns.
        column.SetValue("Sortable", true);
        column.SetValue("Filterable", true);
    }


}
